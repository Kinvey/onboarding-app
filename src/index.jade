doctype html
html
  head

    meta(charset="utf8")
    meta(http-equiv="X-UA-Compatible" content="IE=edge")
    meta(name="viewport" content="width=device-width, initial-scale=1")

    link(rel="stylesheet", href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css")
    script(src="//cdn.pubnub.com/pubnub.min.js")

    //build:js LIBVERSION.min.js
    //libjs start
    //libjs end
    //endbuild

    //build:css LIBVERSION.min.css
    //libcss start
    //libcss end
    //endbuild

    //build:css APPVERSION.min.css
    //appcss start
    //appcss end
    //endbuild

    script(src="//da189i1jfloii.cloudfront.net/js/kinvey-angular-1.1.8.js")

  body
    div(ui-view)

    //build:js APPVERSION.min.js
    //appjs start
    //appjs end
    //endbuild

    script.
        angular.element(document).ready(function() {
          var loadPubnub;
          if (typeof PUBNUB === "undefined" || PUBNUB === null) {
            loadPubnub = function(callback) {
              var checkForPubnub, checkInterval, failedChecks, firstScriptTag, pubnubScriptTag, waitFor;
              firstScriptTag = document.getElementsByTagName('script')[0];
              pubnubScriptTag = document.createElement('script');
              pubnubScriptTag.id = 'pubnub-sdk';
              pubnubScriptTag.src = "/thirdparty/pubnub/pubnub.min.js";
              firstScriptTag.parentNode.insertBefore(pubnubScriptTag, firstScriptTag);
              failedChecks = 0;
              waitFor = 10000;
              checkInterval = 200;
              return checkForPubnub = setInterval(function() {
                failedChecks += 1;
                if (typeof PUBNUB !== "undefined" && PUBNUB !== null) {
                  clearInterval(checkForPubnub);
                  return callback();
                } else {
                  if (failedChecks > (waitFor / checkInterval)) {
                    throw new Error('Could not load PubNub by any means');
                  }
                }
              }, checkInterval);
            };
          } else {
            loadPubnub = function(callback) {
              return callback();
            };
          }
          return loadPubnub(function() {
            return angular.bootstrap(document, ['app']);
          });
        });
